[ -f /usr/local/opt/libffi/lib/pkgconfig ] && export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -x "$(command -v rg)" ] && export FZF_DEFAULT_COMMAND='rg --files --hidden 2> /dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
#export FZF_DEFAULT_OPTS='--height 40% --reverse --preview="head -$LINES {}"'
export FZF_DEFAULT_OPTS='--height 40% --reverse'
export NODE_OPTIONS=--max-old-space-size=8192
[ -d ~/.cargo/bin ] && export PATH="$HOME/.cargo/bin:$PATH"
export HOMEBREW_NO_AUTO_UPDATE=1
[ -d ~/.poetry/bin ] && export PATH="$HOME/.poetry/bin:$PATH"
[ -d /usr/local/opt/mysql-client/bin ] && export PATH="/usr/local/opt/mysql-client/bin:$PATH"

# ---------- Aliases
# macos doesn't auto sort by CPU
alias ls='ls -a'
alias top='top -o cpu'
alias vis='vi -c OpenSession'
alias mvis='mvim -c OpenSession'
alias viallnotes='vi ~/Dropbox/Documents/twitter/notes.md ~/Dropbox/Notes/*.md'
alias goctave='\octave -q'
[ -x "$(command -v octave)" ] && alias octave='octave -W -q'
[ -x "$(command -v rg)" ] && [ -x "$(command -v ctags)" ] && alias ctags="rg --files | ctags --links=no -L-"
[ -x "$(command -v rg)" ] && alias rg="rg --hidden"

# Editing aliases
alias cvim='vi ~/.vimrc'
alias ctmux='vi ~/.tmux.conf'
alias cbash="vi ~/.bashrc*"
alias czsh="vi ~/.zshrc*"
alias cgit="vi ~/.gitconfig*"

# Proxy stuff
alias proxywifion='sudo networksetup -setsocksfirewallproxystate Wi-Fi on' #on / off
alias proxywifioff='sudo networksetup -setsocksfirewallproxystate Wi-Fi off' #on / off

# ------------ Functions
function nzproxy {
  #ssh -ND 9876 blu@benlu.co &
  #ssh -ND 9876 blu@202.169.196.28 &
  ssh -ND 9876 mezap &
  proxywifion
  read -p "Press enter to turn off proxy: "
  proxywifioff
  fg
}

# Use lf to switch directories and bind it to ctrl-o
lfcd () {
    tmp="$(mktemp)"
    lf -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp"
        [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
    fi
}
bindkey -s '^o' 'lfcd\n'

# Function to show colours
function show_colours {
  for i in {0..255}; do printf "\x1b[38;5;${i}mcolor%-5i\x1b[0m" $i ; if ! (( ($i + 1 ) % 8 )); then echo ; fi ; done
}

# https://stackoverflow.com/a/50830617/6725059
function cd() {
  builtin cd "$@"

  if [[ -z "$VIRTUAL_ENV" ]] ; then
    ## If env folder is found then activate the vitualenv
      if [[ -d ./env ]] ; then
        source ./env/bin/activate
      fi
  else
    ## check the current folder belong to earlier VIRTUAL_ENV folder
    # if yes then do nothing
    # else deactivate
      parentdir="$(dirname "$VIRTUAL_ENV")"
      if [[ "$PWD"/ != "$parentdir"/* ]] ; then
        deactivate
      fi
  fi
}

# For Arc, phabricator
export VISUAL='/usr/local/bin/vim'
export EDITOR="$VISUAL"
